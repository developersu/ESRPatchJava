/*
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package esrpatchjava;

import java.io.*;
import java.nio.Buffer;
import java.nio.ByteBuffer;

public class DVDV {
	static {
		{
			ByteBuffer byteBuffer = ByteBuffer.allocate(0x6000);
			byteBuffer.put(new byte[]{
					(byte)0x00, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x60, (byte)0x00, (byte)0x00, (byte)0x00,     (byte)0xD5, (byte)0x97, (byte)0xF0, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x0F, (byte)0x1A,     (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x03, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,     (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x4F, (byte)0x53, (byte)0x54, (byte)0x41, (byte)0x20, (byte)0x43, (byte)0x6F,     (byte)0x6D, (byte)0x70, (byte)0x72, (byte)0x65, (byte)0x73, (byte)0x73, (byte)0x65, (byte)0x64,
					(byte)0x20, (byte)0x55, (byte)0x6E, (byte)0x69, (byte)0x63, (byte)0x6F, (byte)0x64, (byte)0x65
			});
			((Buffer) byteBuffer).position(112);
			byteBuffer.put(new byte[]{0x08, 0x44, 0x56, 0x44, 0x56, 0x49, 0x44, 0x45, 0x4F});
			((Buffer) byteBuffer).position(239);
			byteBuffer.put(new byte[]{
					0x09, 0x00, 0x4F, 0x53, 0x54, 0x41, 0x20, 0x43,    0x6F, 0x6D, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
					0x64, 0x20, 0x55, 0x6E, 0x69, 0x63, 0x6F, 0x64,    0x65
			});
			((Buffer) byteBuffer).position(304);
			byteBuffer.put(new byte[]{
					0x08, 0x44, 0x56, 0x44, 0x56, 0x49, 0x44, 0x45,     0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
					0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09
			});
			((Buffer) byteBuffer).position(400);
			byteBuffer.put(new byte[]{
					0x00, 0x08, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
					0x00, 0x2A, 0x4F, 0x53, 0x54, 0x41, 0x20, 0x55,    0x44, 0x46, 0x20, 0x43, 0x6F, 0x6D, 0x70, 0x6C,
					0x69, 0x61, 0x6E, 0x74, 0x00, 0x00, 0x00, 0x00,    0x02, 0x01, 0x03
			});
			((Buffer) byteBuffer).position(2048);
			byteBuffer.put(new byte[]{
					(byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0xFC, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0xF0, (byte)0x01, (byte)0x01
			});
			((Buffer) byteBuffer).position(4096);
			byteBuffer.put(new byte[]{
					(byte)0x05, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x5F, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x80, (byte)0xA8, (byte)0x2C, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x30, (byte)0x02, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,    (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xA5, (byte)0x14, (byte)0x00, (byte)0x00,
					(byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x88, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x0F, (byte)0x1A,
					(byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07,    (byte)0x08, (byte)0x1C, (byte)0x0F, (byte)0x1A, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x0F, (byte)0x1A,    (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01
			});
			((Buffer) byteBuffer).position(4224);
			byteBuffer.put(new byte[]{
					0x00, 0x2A, 0x41, 0x48, 0x45, 0x41, 0x44, 0x20,    0x4E, 0x65, 0x72, 0x6F
			});
			((Buffer) byteBuffer).position(4264);
			byteBuffer.put(new byte[]{
					(byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x06, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xEE, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA7, (byte)0x34, (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44, (byte)0x46, (byte)0x20, (byte)0x46, (byte)0x72,
					(byte)0x65, (byte)0x65, (byte)0x45, (byte)0x41, (byte)0x53, (byte)0x70, (byte)0x61, (byte)0x63,    (byte)0x65, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x61, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44,
					(byte)0x46, (byte)0x20, (byte)0x44, (byte)0x56, (byte)0x44, (byte)0x20, (byte)0x43, (byte)0x47,    (byte)0x4D, (byte)0x53, (byte)0x20, (byte)0x49, (byte)0x6E, (byte)0x66, (byte)0x6F, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x49, (byte)0x05, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x88, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x03
			});
			((Buffer) byteBuffer).position(6144);
			byteBuffer.put(new byte[]{
					(byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xC8, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x47, (byte)0x62, (byte)0x18, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x0A, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,    (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xAD, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0xD5, (byte)0xB1, (byte)0x20, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x09, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x56,
					(byte)0x49, (byte)0x44, (byte)0x45, (byte)0x4F, (byte)0x5F, (byte)0x54, (byte)0x53, (byte)0x00,    (byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xCD, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x63, (byte)0x43, (byte)0x20, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x09, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x41,
					(byte)0x55, (byte)0x44, (byte)0x49, (byte)0x4F, (byte)0x5F, (byte)0x54, (byte)0x53
			});
			((Buffer) byteBuffer).position(8192);
			byteBuffer.put(new byte[]{
					(byte)0x05, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x9D, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA5, (byte)0xBF, (byte)0x2C, (byte)0x01, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x30, (byte)0x02, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,    (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xA5, (byte)0x14, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x90, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x17,
					(byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07,    (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x17, (byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x17,    (byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01
			});
			((Buffer) byteBuffer).position(8320);
			byteBuffer.put(new byte[]{
					0x00, 0x2A, 0x41, 0x48, 0x45, 0x41, 0x44, 0x20,    0x4E, 0x65, 0x72, 0x6F
			});
			((Buffer) byteBuffer).position(8352);
			byteBuffer.put(new byte[]{
					(byte)0x17, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x06, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xF0, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA7, (byte)0x34, (byte)0x08, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44, (byte)0x46, (byte)0x20, (byte)0x46, (byte)0x72,
					(byte)0x65, (byte)0x65, (byte)0x45, (byte)0x41, (byte)0x53, (byte)0x70, (byte)0x61, (byte)0x63,    (byte)0x65, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x61, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44,
					(byte)0x46, (byte)0x20, (byte)0x44, (byte)0x56, (byte)0x44, (byte)0x20, (byte)0x43, (byte)0x47,    (byte)0x4D, (byte)0x53, (byte)0x20, (byte)0x49, (byte)0x6E, (byte)0x66, (byte)0x6F, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x49, (byte)0x05, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x90, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x06
			});
			((Buffer) byteBuffer).position(10240);
			byteBuffer.put(new byte[]{
					(byte)0x05, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x1A, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA6, (byte)0x3A, (byte)0x2C, (byte)0x01, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x30, (byte)0x02, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,    (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xA5, (byte)0x14, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x17,
					(byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07,    (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x17, (byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x17,    (byte)0x35, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01
			});
			((Buffer) byteBuffer).position(10368);
			byteBuffer.put(new byte[]{
					0x00, 0x2A, 0x41, 0x48, 0x45, 0x41, 0x44, 0x20,    0x4E, 0x65, 0x72, 0x6F
			});
			((Buffer) byteBuffer).position(10400);
			byteBuffer.put(new byte[]{
					(byte)0x1A, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x06, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xF1, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA7, (byte)0x34, (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44, (byte)0x46, (byte)0x20, (byte)0x46, (byte)0x72,
					(byte)0x65, (byte)0x65, (byte)0x45, (byte)0x41, (byte)0x53, (byte)0x70, (byte)0x61, (byte)0x63,    (byte)0x65, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x61, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44,
					(byte)0x46, (byte)0x20, (byte)0x44, (byte)0x56, (byte)0x44, (byte)0x20, (byte)0x43, (byte)0x47,    (byte)0x4D, (byte)0x53, (byte)0x20, (byte)0x49, (byte)0x6E, (byte)0x66, (byte)0x6F, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x49, (byte)0x05, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x09
			});
			((Buffer) byteBuffer).position(12288);
			byteBuffer.put(new byte[]{
					(byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xCB, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x47, (byte)0x62, (byte)0x18, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x0A, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,    (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xCD, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0xEC, (byte)0xB3, (byte)0x24, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x0D, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x56,
					(byte)0x49, (byte)0x44, (byte)0x45, (byte)0x4F, (byte)0x5F, (byte)0x54, (byte)0x53, (byte)0x2E,    (byte)0x49, (byte)0x46, (byte)0x4F, (byte)0x00, (byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00,
					(byte)0x7D, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xE0, (byte)0x6F, (byte)0x24, (byte)0x00,    (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x0D,
					(byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x08, (byte)0x56, (byte)0x49, (byte)0x44, (byte)0x45, (byte)0x4F,    (byte)0x5F, (byte)0x54, (byte)0x53, (byte)0x2E, (byte)0x42, (byte)0x55, (byte)0x50
			});
			((Buffer) byteBuffer).position(14336);
			byteBuffer.put(new byte[]{
					(byte)0x05, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x66, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x68, (byte)0xC2, (byte)0x2C, (byte)0x01, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x30, (byte)0x02, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,    (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xA5, (byte)0x14, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xF0, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x19,
					(byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07,    (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x19, (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x19,    (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01

			});
			((Buffer) byteBuffer).position(14464);
			byteBuffer.put(new byte[]{
					0x00, 0x2A, 0x41, 0x48, 0x45, 0x41, 0x44, 0x20,    0x4E, 0x65, 0x72, 0x6F
			});
			((Buffer) byteBuffer).position(14496);
			byteBuffer.put(new byte[]{
					(byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x06, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xF3, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA7, (byte)0x34, (byte)0x08, (byte)0x00, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44, (byte)0x46, (byte)0x20, (byte)0x46, (byte)0x72,
					(byte)0x65, (byte)0x65, (byte)0x45, (byte)0x41, (byte)0x53, (byte)0x70, (byte)0x61, (byte)0x63,    (byte)0x65, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x61, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44,
					(byte)0x46, (byte)0x20, (byte)0x44, (byte)0x56, (byte)0x44, (byte)0x20, (byte)0x43, (byte)0x47,    (byte)0x4D, (byte)0x53, (byte)0x20, (byte)0x49, (byte)0x6E, (byte)0x66, (byte)0x6F, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x49, (byte)0x05, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xF0, (byte)0x07, (byte)0x00, (byte)0x00,    (byte)0x0A
			});
			((Buffer) byteBuffer).position(16384);
			byteBuffer.put(new byte[]{
					(byte)0x05, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x53, (byte)0x7E, (byte)0x2C, (byte)0x01, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x30, (byte)0x02, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,    (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xA5, (byte)0x14, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xF0, (byte)0x07, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x19,
					(byte)0x17, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07,    (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x19, (byte)0x17, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x78, (byte)0x10, (byte)0xD5, (byte)0x07, (byte)0x08, (byte)0x1C, (byte)0x11, (byte)0x19,    (byte)0x17, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01
			});
			((Buffer) byteBuffer).position(16512);
			byteBuffer.put(new byte[]{
					0x00, 0x2A, 0x41, 0x48, 0x45, 0x41, 0x44, 0x20,    0x4E, 0x65, 0x72, 0x6F
			});
			((Buffer) byteBuffer).position(16544);
			byteBuffer.put(new byte[]{
					(byte)0x19, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x06, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xF4, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0xA7, (byte)0x34, (byte)0x08, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x84, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44, (byte)0x46, (byte)0x20, (byte)0x46, (byte)0x72,
					(byte)0x65, (byte)0x65, (byte)0x45, (byte)0x41, (byte)0x53, (byte)0x70, (byte)0x61, (byte)0x63,    (byte)0x65, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x61, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x2A, (byte)0x55, (byte)0x44,
					(byte)0x46, (byte)0x20, (byte)0x44, (byte)0x56, (byte)0x44, (byte)0x20, (byte)0x43, (byte)0x47,    (byte)0x4D, (byte)0x53, (byte)0x20, (byte)0x49, (byte)0x6E, (byte)0x66, (byte)0x6F, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x01, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x49, (byte)0x05, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xF0, (byte)0x07, (byte)0x00, (byte)0x00,    (byte)0x0B
			});

			((Buffer) byteBuffer).position(18432);
			byteBuffer.put(new byte[]{
					(byte)0x01, (byte)0x01, (byte)0x02, (byte)0x00, (byte)0xCE, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x47, (byte)0x62, (byte)0x18, (byte)0x00, (byte)0x09, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x01, (byte)0x00, (byte)0x0A, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00, (byte)0x00,    (byte)0x02
			});
			((Buffer) byteBuffer).position(20480);
			byteBuffer.put(new byte[]{
					(byte)0x44, (byte)0x56, (byte)0x44, (byte)0x56, (byte)0x49, (byte)0x44, (byte)0x45, (byte)0x4F,    (byte)0x2D, (byte)0x56, (byte)0x4D, (byte)0x47, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x74,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0A,
					(byte)0x00, (byte)0x10, (byte)0x00, (byte)0xFE, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01,    (byte)0x00, (byte)0x01, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06
			});

			((Buffer) byteBuffer).position(20610);
			byteBuffer.put(new byte[]{
					0x05, 0x03, 0x00, 0x00, 0x04
			});

			((Buffer) byteBuffer).position(20675);
			byteBuffer.put(new byte[]{
					0x0B, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
					0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,    0x09, 0x00, 0x00, 0x00, 0x0A
			});

			((Buffer) byteBuffer).position(20736);
			byteBuffer.put((byte)0x43);

			((Buffer) byteBuffer).position(20821);
			byteBuffer.put((byte)0x01);

			((Buffer) byteBuffer).position(21511);
			byteBuffer.put(new byte[]{
					(byte)0xC0, (byte)0x01, (byte)0x80
			});
			((Buffer) byteBuffer).position(21728);
			byteBuffer.put(new byte[]{
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xEC, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x17, (byte)0x71, (byte)0x00, (byte)0x00, (byte)0x0F,    (byte)0x00, (byte)0x63, (byte)0x00, (byte)0x00, (byte)0x30, (byte)0x06, (byte)0x00, (byte)0x02,
					(byte)0x00, (byte)0xC0
			});
			((Buffer) byteBuffer).position(22528);
			byteBuffer.put(new byte[]{
					(byte)0x44, (byte)0x56, (byte)0x44, (byte)0x56, (byte)0x49, (byte)0x44, (byte)0x45, (byte)0x4F,    (byte)0x2D, (byte)0x56, (byte)0x4D, (byte)0x47, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x74,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0A,
					(byte)0x00, (byte)0x10, (byte)0x00, (byte)0xFE, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01,    (byte)0x00, (byte)0x01, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06
			});

			((Buffer) byteBuffer).position(22658);
			byteBuffer.put(new byte[]{
					(byte)0x05, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x04
			});

			((Buffer) byteBuffer).position(22720);
			byteBuffer.put(new byte[]{
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0B, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
					(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,    (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x09, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x0A
			});

			((Buffer) byteBuffer).position(22784);
			byteBuffer.put((byte)0x43);

			((Buffer) byteBuffer).position(22869);
			byteBuffer.put((byte)0x01);

			((Buffer) byteBuffer).position(23559);
			byteBuffer.put(new byte[]{(byte)0xC0, (byte)0x01, (byte)0x80});

			((Buffer) byteBuffer).position(23781);
			byteBuffer.put(new byte[]{
					(byte)0xEC, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,     (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x17, (byte)0x71,
					(byte)0x00, (byte)0x00, (byte)0x0F, (byte)0x00, (byte)0x63, (byte)0x00, (byte)0x00, (byte)0x30,     (byte)0x06, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0xC0
			});

			((Buffer) byteBuffer).flip();

			dvdvdata = byteBuffer.array();
		}
	}
	private static final byte[] dvdvdata;

	public static void write(RandomAccessFile iso) throws IOException {
		iso.seek(128 * ESRPatch.LBA_SIZE);
		iso.write(dvdvdata);
	}

}
